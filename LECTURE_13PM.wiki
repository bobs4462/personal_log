= Управление конфигурацией =
*Управление конфигурацией* - комплекс методов направленные на систематический
учет изменений вносимых в программный продукт в процессе его разрботки и
соправождения, сохранение целостности изменений, предотвращение нежелательных
эффектов, и формализация процессов внесения измнений. Совокупность операций,
предназначенных для:
- контроля изменений путём идентификации рабочийх продуктов
- установления взаимовсвязи между ними.
- определения механизмов для управления различными версиями этих рабочих
  продуктов
- контроля назначенных изменений
- контроля и регистрации изменений

*SCM:*
- идентификацию элементов конфигураций
- постаянный контроль изменений и поддержку целостности по
- тарссировку (пошаговая фиксации изменений) конфигураци на всем ЖЦ программного
  продукта
  
Понимание сути SCM
План и политика - стратегия, где в сжатой форме определены ожидаемые результаты,
которые надеется получить организация
Процессы SCM - необходимы процессы документирование, отражающие способы
выполенения SCM.

Метрические показатели отражают эффективность, благодаря которым организация
получает макс пользу от внедрения SCM
Элементы конфигурации - объект в конфигурации, удовлетворяющий функции конечного
использования, который может быть уникально идентифицирован в данной точке SCM.

Инструментальные средства - исключение возможности потери элементов
конфигурации. Обеспечить возможность возврата назад, в случаях когда принятые
решения, полученные при их реализации версий элементов конфигурации не
усраивает разработчиков проекта. гарантировать точное повторение действий,
избегать дублирования элементов конфигурации, поддерживать наблюдаемость хода
выполенения работ по проекту.

*Основные функции SCM:*
- Идентфикация - обозначение каждой части ПО, с целью распознавония в дальнейшем.
- Контроль - анализ, предложенных изменений в элементе конфигурации.  Цель
  контроля - принять обоснованные решения и признать возможные последствия
  изменения системы.
- Аудит - утверждение того, что запрашиваемые изменения действительно выполнены.
  Позволяет менеджерам определить, происходит ли эволюция ПО согласно с
  требованиями.
- Учет статуса - представляет статистическую информацию, предысторию,
  позволяющая определить, когда и какие изменения происходили в программном
  проекте. Осуществить ревизию требования SCM, также дает возможность охватить
  весь спект информации, в отношении деятельности организации на протяжении
  всего ЖЦ продукта.
  
== Характеристики и свойства. необходимые для реализации функции ==

*Идентификация:* 
- способность различать элементы конфигурации
- способность находить их взаимосвязь
- знание технический особенностей управления конфигурацией
- ориентация на системотехнику (системный подход)
- программирование.

*Контроль:*
- способность оценивать преимущства относительно затрат
- системный подход (баланс инжинерных|управленческих качеств, а также качеств
  пользователя|продавца)
- способность оценивать изменения при проектировании ПО.

*Аудит:*
- пристальное внимание к деталям
- способность определять совместимость ПО
- способность находить ошибки
- необходимо иметь большой опты относительно технических аспектов системотехники
  или разрботки ПО.
  
*Учет статуса:*
- способность обращать внимание на примечания и регистрировать данные
- способность обрабатывать данные
- некоторые технические знания
- ориентация на системотехники
- программирование.

== Инструментальные средства управления конфигурацией ==

В основе требований к инструментальным средствам и критерии их выбора лежит
набор характеристик, позволяющие получить непротиворечивые данные о реальной
среде разработки ПО.

*Основные критерии отбора инструментальных средств:*
- Многопользовательская поддержка - несколько пользователей работают над
  продуктом. Пользователи должны сохранять всю информацию в совместно
  используемом центральном хранилище, а SCM должна обепечить параллельную,
  контроллируемую работы над различными документами проекта
- Интуитивные графический интерфейс пользователя (нужно различным категориям
  пользователей)
- Соответствие среде разработки организации - организация должна заранее
  установить используемые платформу аппаратного обеспечения и ПО
- Масштабируемость - инструментальное средство должно обеспечивать выполнение
  проектов разного масштаба
- Гибкость при интеграции других инструментальных средства по разработке ПО -
  инструментальные средства для программирования, внедрения, тестирование ПО,
  должны взаимодествовать посредством общего хранилища SCM
- Легкость установки и настройки
- Модифицируемость моделей - хотя набор моделей определеяется заранее, каждая из
  моделей должна быть модифицируемой и обладать возможностью к расширению.  Это
  особенно важно, поскольку менеджеры и разработчики адаптируют модели к
  процессу разработки ПО согласно с целями компании. Функцианальные модели
  должны быть адаптированы к функциям, которые выполняют различные специалисты,
  учавствующие в процессе.
- Менеджемент процессов - включает поддержку ЖЦ и представления объекта, в
  соотвтствии с гибкими подходами
- Управление, основанное на целевых моделях - позволяет подключать различные ЖЦ
  к различным объектам
- Широкая поддержка этапа разработки - инструментальное средство должно помочь
  разработчику в определении набора объектов, подлежащих модернизации или
  обновлению
- Менеджемент неразрабатываемых объектов - инструментальное средство должно
  управлять всеми компонентами проектами, а не только исполняемым кодом
  (документы, их версии, и выпуски).
- Управлению допуском - не все должны иметь право вносить изменения в различные
  части программного продукта
  
  == Преимущества процесса управления конфигурацией ==
  
  *Аспекты реализации основных преимущств SCM*
  * Контроль - дает возможность анализировать, утверждать и применять изменения
	в элемент конфигурации
  * Качество - отслеживание качество работ специалистов, чтобы обеспечить
	высокое качество с помощью отслеживания изменений, сделанных в продукте в
	течении его ЖЦ, определяют соответсвующие показатели конечного продукта
  * Менеджемент - связан с автоматизацией идентификации и управления элементами
	конфигурации на протяжении ЖЦ, до окончательной компоновки части продукта
	или поставки.	
  * Экономия затрат - снижение себестоимости осуществляется на протяжении всего
	ЖЦ. SCM - позволяет управлять изменениями требований и календарным планом и
	осуществлять поддержку семейств продуктов благодря примениние SCM. Семейство
	можно анализировать. Учет воздействий на все версии и релизы позволяет
	снизить побочные эффекты, через контроллируемые изменения.


  
	= Решение проблем, возникающих при разработке ОП, с помощью системы управления конфигурацией =

*Решаемые проблемы:*
- Недостаток прозрачности - благодаря SCM, все элементы конфигурациии и
  компоненты становятся видимыми для версий, релизов, и семейств продуктов
- Недостаток контроля - сложно оценить объем выполнененой и оставшейся работы,
  SCM предоставлят механизм управления процессом разработки через определение
  фактически затраченных и плановых ресурсов, и оценивание будущих затрат путем
  экстрополяции
- Недостаток трассировки - отсутствие связи между отдельными событиями проекта
  приводит к его провалу. SCM обеспечивает пошаговую фиксацию изменений и
  взаимосвязь среди версий, релизов и семейств продуктов
- Недостаток мониторинга - SCM обеспечивает мониторинг, и менеджеры могут
  принимать взвешенные решения не выбиваясь из графиков и не превышая бюджет.
- Неконтроллируемые изменения - ПО являетсчя достаточно гибким, и пользователи
  генерируют новые пожелания к ПО. Все инструментальные средства поддерживают
  механизм для гибкого управления изменениями ПО в связи с потребностями
  пользователей в течении процесса его разработки



